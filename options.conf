[package]
name = shaderc
url = file:///insilications/build/clearlinux/packages/shaderc/shaderc-v2020.2.zip
archives = file:///insilications/build/clearlinux/packages/shaderc/SPIRV-Headers-1.5.3.zip third_party/spirv-headers file:///insilications/build/clearlinux/packages/shaderc/SPIRV-Tools-v2020.4.zip third_party/spirv-tools file:///insilications/build/clearlinux/packages/shaderc/effcee-v2019.1.zip third_party/effcee file:///insilications/build/clearlinux/packages/shaderc/googletest-release-1.10.0.zip third_party/googletest file:///insilications/build/clearlinux/packages/shaderc/glslang-master-tot.zip third_party/glslang file:///insilications/build/clearlinux/packages/shaderc/re2-2020-08-01.zip third_party/re2
giturl = https://github.com/haasn/libplacebo.git
domain = 
download_from_git = True
branch = main
archives_from_git = https://github.com/google/googletest.git third_party/googletest master https://github.com/KhronosGroup/SPIRV-Headers.git third_party/spirv-headers master https://github.com/KhronosGroup/SPIRV-Tools.git third_party/spirv-tools master https://github.com/KhronosGroup/glslang.git third_party/glslang master https://github.com/google/re2.git third_party/re2 master https://github.com/google/effcee.git third_party/effcee main
alias = 

[autospec]
# build 32 bit libraries
32bit = false
# allow package to build with test failures
allow_test_failures = false
# alternative cargo pattern
altcargo1 = false
# alternative pgo flags
altflags_pgo = true
# unset %build ld_as_needed variable
asneeded = false
# this package is trusted enough to automatically update (used by other tools)
autoupdate = false
# extend flags with '-std=gnu++98
broken_c++ = false
# disable parallelization during build
broken_parallel_build = false
# configure build with special options
build_special = false
# this package is a library compatibility package and only ships versioned library files
compat = false
# set conservative build flags
conservative_flags = false
# dev package requires the extras to be installed
dev_requires_extras = false
# pass -ffast-math to compiler
fast-math = false
# alternative flags
fsalt1 = false
# optimize build for speed over size
funroll-loops = false
# set flags to smallest -02 flags possible
insecure_build = false
# do not remove static libraries
keepstatic = true
# do not require autostart subpackage
no_autostart = false
# disable automatic provides processing
noautoprov = false
# disable automatic requeriments processing
noautoreq = false
# do not generate debuginfo for this package
nodebug = false
# ignore missing build ids
nomissingbuildids = false
# disable stripping binaries
nostrip = true
# configure build also for openmpi
openmpi = false
# optimize build for size over speed
optimize_size = false
# set profile for pgo
pgo = true
# set flags for security-sensitive builds
security_sensitive = false
# do not run test suite
skip_tests = false
# add .so files to the lib package instead of dev
so_to_lib = false
# configure build for avx2
use_avx2 = false
# configure build for avx512
use_avx512 = false
# add clang flags
use_clang = false
# configure build for lto
use_lto = true
# require package verification for build
verify_required = false

